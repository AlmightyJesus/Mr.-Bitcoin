{"version":3,"sources":["assets/img/bitcoin.png","cmps/Nav-Bar.jsx","services/bitcoin.service.js","cmps/Moves-List.jsx","services/utils.service.js","services/user.service.js","stores/user/user.actions.js","views/Home.jsx","views/Login.jsx","cmps/Contact-Preview.jsx","cmps/Contact-List.jsx","services/contact.service.js","stores/contact/contact.actions.js","views/ContactPage.jsx","views/ContactDetails.jsx","views/ContactEdit.jsx","Router.jsx","App.jsx","stores/contact/contact.reducers.js","stores/user/user.reducers.js","stores/store.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","to","getRate","a","async","axios","get","rate","MovesList","this","props","moves","map","move","at","Date","toLocaleString","key","amount","React","Component","makeId","length","txt","possible","i","charAt","Math","floor","random","saveToStorage","value","json","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","showToast","type","Swal","mixin","toast","position","showConfirmButton","timer","fire","icon","title","getUser","signUp","name","newUser","_id","utilService","coins","gUsers","push","Promise","resolve","addMove","contact","loggedInUser","unshift","toId","now","checkLogin","user","find","reject","users","_createUsers","setUser","getLoggedInUser","dispatch","userService","Home","state","bitcoinService","setState","data","mapDispatchToProps","userActions","connect","Login","updateName","ev","target","login","preventDefault","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","history","src","require","alt","onSubmit","onChange","placeholder","ContactPreview","email","phone","ContactList","contacts","getContacts","filterBy","term","contactsToReturn","toLocaleLowerCase","filter","includes","sort","b","getContactById","id","removeContact","index","findIndex","splice","saveContact","c","_updateContact","_addContact","getEmptyContact","setContacts","setCurrContact","currContact","removeCurrContact","updateContacts","loadContacts","contactService","loadCurrContact","savedContact","ContactFilter","handleFilter","ContactPage","contactsToShow","toLowerCase","contactActions","ContactDetails","contactMoveList","match","params","Number","isInteger","onClick","transferBTC","updateAmount","ContactEdit","updateContact","field","prevState","Router","exact","path","component","App","INITIAL_STATE","window","__REDUX_DEVTOOLS_EXTENSION__","rootReducer","combineReducers","action","idx","slice","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createBrowserHistory","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f93f7020.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitcoin.1826ecc4.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function NavBar() {\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <h1>Mr. <span>₿</span></h1>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/home\">Home</Link>\r\n                <Link to=\"/contact\">Contacts</Link>\r\n                <Link to=\"/statistics\">Statistics</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    getRate,\r\n}\r\n\r\nasync function getRate() {\r\n    const rate = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1&cors=true')\r\n    return rate\r\n}","import React from 'react'\r\n\r\nexport default class MovesList extends React.Component {\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.props.moves.map(move => {\r\n                    const at = new Date(move.at).toLocaleString()\r\n                    return <li key={move.at}>\r\n                        <p>Transfered {move.amount} BTC to {move.to} at {at}</p>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}","import Swal from 'sweetalert2'\r\n\r\nexport default {\r\n    makeId,\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    showToast\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    const json = JSON.stringify(value);\r\n    localStorage.setItem(key, json)\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const json = localStorage.getItem(key);\r\n    const value = JSON.parse(json)\r\n    return value;\r\n}\r\n\r\nfunction showToast(txt,type){\r\n    const msg = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-start',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n      })\r\n      msg.fire({\r\n        icon: type,\r\n        title: txt\r\n      })\r\n}\r\n","import utilService from './utils.service'\r\n\r\nexport default {\r\n    getUser,\r\n    signUp,\r\n    addMove,\r\n    checkLogin,\r\n}\r\n\r\nvar gUsers = _createUsers()\r\n\r\nfunction _createUsers() {\r\n    var users = utilService.loadFromStorage('users')\r\n    if (!users) {\r\n        users = [\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Shuki\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Shula Mualem\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Zigmond\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Mulu Mendi\",\r\n                coins: 100,\r\n                moves: []\r\n            }\r\n        ]\r\n        utilService.saveToStorage('users', users)\r\n    }\r\n    gUsers = users\r\n    return gUsers\r\n}\r\n\r\n\r\nfunction addMove(contact, amount) {\r\n    var loggedInUser = getUser()    \r\n    if (loggedInUser.coins < amount) return utilService.showToast('Not enough BTC\\'s in your wallet','warning')    \r\n    loggedInUser.moves.unshift({\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        at: Date.now(),\r\n        amount\r\n    })\r\n    loggedInUser.coins -= amount\r\n    utilService.saveToStorage('loggedInUser', loggedInUser)\r\n    return Promise.resolve(loggedInUser)\r\n}\r\n\r\nfunction getUser() {\r\n    var loggedInUser = utilService.loadFromStorage('loggedInUser')    \r\n    if (!loggedInUser) {\r\n        loggedInUser = gUsers[3]\r\n        utilService.saveToStorage('loggedInUser', loggedInUser)\r\n    }\r\n    return loggedInUser\r\n}\r\n\r\nfunction signUp(name) {\r\n    const newUser = {\r\n        _id: utilService.makeId(),\r\n        name,\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n    gUsers.push(newUser)\r\n    utilService.saveToStorage('users', gUsers)\r\n    utilService.saveToStorage('loggedInUser', newUser)\r\n    return Promise.resolve(newUser)\r\n}\r\n\r\nfunction checkLogin(name) {\r\n    var user = gUsers.find(user => {\r\n        return user.name === name\r\n    })    \r\n    if (!user) return Promise.reject('Nope')\r\n    utilService.saveToStorage('loggedInUser', user)\r\n    return Promise.resolve(user)\r\n}","import userService from '../../services/user.service'\r\n\r\nconst getLoggedInUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await userService.getUser()\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nconst setUser = (user) => {\r\n    return { type: 'SET_CURR_USER', user }\r\n}\r\n\r\n\r\nconst signUp = (name) => {\r\n    return async (dispatch) => {\r\n        const user = await userService.signUp(name)\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\n\r\nconst checkLogin = (name) => {\r\n    return async (dispatch) => {\r\n        const user = await userService.checkLogin(name)\r\n        if (user) return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\n\r\nconst addMove = (contact, amount) => {\r\n    return async (dispatch) => {\r\n        const user = await userService.addMove(contact, amount)\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport default {\r\n    getLoggedInUser,\r\n    checkLogin,\r\n    signUp,\r\n    addMove,\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport bitcoinService from '../services/bitcoin.service'\r\nimport MovesList from '../cmps/Moves-List'\r\nimport userActions from '../stores/user/user.actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        rate: null,\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.getLoggedInUser()\r\n        const rate = await bitcoinService.getRate()\r\n        this.setState({ rate: rate.data })\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        return (\r\n            user && <>\r\n                <h1>Welcome, {user.name}</h1>\r\n                <h4>Your coins : {user.coins}</h4>\r\n                {this.state.rate && <h4>Live BTC Rate: {this.state.rate}</h4>}\r\n                {user.moves.length > 0 && <MovesList moves={user.moves} />}\r\n                <Link to=\"/contact\">See Contacts</Link>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedInUser: userActions.getLoggedInUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home)","import React from 'react'\r\nimport userActions from '../stores/user/user.actions'\r\nimport { connect } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport utilService from '../services/utils.service'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        name: ''\r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    updateName = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ name: value })\r\n    }\r\n\r\n    login = async (ev) => {\r\n        ev.preventDefault()\r\n        const { name } = this.state\r\n        var user;\r\n        try {\r\n            user = await this.props.checkLogin(name)            \r\n        } catch (err) {\r\n            Swal.fire({\r\n                title: 'No user found',\r\n                text: `Would you like to create this user?` ,\r\n                icon: 'question',\r\n                showCancelButton: true,\r\n                confirmButtonColor: 'gold',\r\n                cancelButtonColor: 'gray',\r\n                confirmButtonText: 'Create'\r\n              }).then(async (result) => {\r\n                if (result.value) {\r\n                    user = await this.props.signUp(name)\r\n                    utilService.showToast('User created successfully!','success')\r\n                    this.props.history.push('/home')\r\n                }\r\n              })\r\n        }        \r\n        if (user) this.props.history.push('/home')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Login / Signup</h1>\r\n                <img className='bitcoin-img' src={require(\"../assets/img/bitcoin.png\")} alt=\"bitcoin\"/>\r\n                <form onSubmit={(ev) => this.login(ev)}>\r\n                    <label>Name:\r\n                   <input onChange={(ev) => this.updateName(ev)} type=\"text\" placeholder=\"Enter name\" />\r\n                    </label>\r\n                    <button>Login</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    checkLogin: userActions.checkLogin,\r\n    signUp: userActions.signUp,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ContactPreview extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n\r\n            <li className=\"contact\">\r\n                <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                    <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                    <div className=\"contact-Info\">\r\n                        <h3>{contact.name}</h3>\r\n                        <p>Email: {contact.email}</p>\r\n                        <p>Phone: {contact.phone}</p>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}   ","import React from 'react'\r\nimport ContactPreview from './Contact-Preview'\r\n\r\nexport default class ContactList extends React.Component {\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n                <ul className= \"contact-list container\">\r\n                    {contacts && contacts.map(contact => <ContactPreview contact={contact} key={contact._id} />)}\r\n                </ul>\r\n        )\r\n    }\r\n}","import utilService from './utils.service'\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    removeContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts;\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction removeContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = utilService.makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {    \r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];","import contactService from '../../services/contact.service'\r\n\r\nconst loadContacts = () => {\r\n    return async (dispatch) => {\r\n        const contacts = await contactService.getContacts()\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst setContacts = contacts => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\n\r\n\r\nconst loadCurrContact = (_id) => {\r\n    return async (dispatch) => {\r\n        const contact = await contactService.getContactById(_id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setCurrContact = currContact => {\r\n    return { type: 'SET_CURR_CONTACT', currContact }\r\n}\r\n\r\n\r\n\r\nconst removeContact = (_id) => {\r\n    return async (dispatch) => {\r\n        await contactService.removeContact(_id)\r\n        return dispatch(removeCurrContact())\r\n    }\r\n}\r\n\r\nconst removeCurrContact = () => {\r\n    return { type: 'REMOVE_CONTACT'}\r\n}\r\n\r\n\r\n\r\nconst saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const savedContact = await contactService.saveContact(contact)\r\n        return dispatch(updateContacts(savedContact))\r\n    }\r\n}\r\n\r\nconst updateContacts = (contact) => {\r\n    return { type: 'UPDATE_CONTACTS',contact}\r\n}\r\n\r\nexport default {\r\n    loadContacts,\r\n    loadCurrContact,\r\n    removeContact,\r\n    saveContact,\r\n}","import React from 'react'\r\nimport ContactList from '../cmps/Contact-List'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\n\r\n\r\nfunction ContactFilter({ handleFilter }) {\r\n    return (\r\n        <input type=\"text\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n    )\r\n}\r\n\r\nclass ContactPage extends React.Component {\r\n    state = {\r\n        filter: null,\r\n    }\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ filter: value })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadContacts()\r\n    }\r\n\r\n    render() {\r\n        const { filter } = this.state\r\n        const { contacts } = this.props\r\n        let contactsToShow\r\n        if (!filter) contactsToShow = contacts\r\n        else contactsToShow = contacts.filter(contact => {\r\n            return contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        })\r\n        return (\r\n            <>\r\n                <h1>contacts</h1>\r\n                <div className=\"filter\">\r\n                    Search Contact:  <ContactFilter handleFilter={this.handleFilter} />\r\n                </div>\r\n                <Link className=\"add-link\" to=\"/contact/edit/\">Add Contact</Link>\r\n                {contacts && <ContactList contacts={contactsToShow} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts: contactActions.loadContacts,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\nimport userActions from '../stores/user/user.actions'\r\nimport MovesList from '../cmps/Moves-List'\r\nimport Swal from 'sweetalert2'\r\nimport utilService from '../services/utils.service'\r\n\r\n\r\nclass ContactDetails extends React.Component {\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    updateAmount(ev) {\r\n        const { value } = ev.target\r\n        this.setState({ amount: value })\r\n    }\r\n\r\n    removeContact(id) {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: `You want to remove ${this.props.contact.name} from your contacts?` ,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: 'gray',\r\n            confirmButtonText: 'Remove'\r\n          }).then(async (result) => {\r\n            if (result.value) {\r\n                await this.props.removeContact(id)\r\n                utilService.showToast('Contact removed successfully!','success')\r\n                this.props.history.push('/contact')\r\n            }\r\n          })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getLoggedInUser()\r\n        const _id = this.props.match.params.id\r\n        await this.props.loadCurrContact(_id)\r\n    }\r\n\r\n    async transferBTC(ev, contact, amount) {\r\n        ev.preventDefault()\r\n        if (!Number.isInteger(+amount)) {\r\n            return utilService.showToast('Only numbers please!','error')\r\n        }\r\n        const user = await this.props.addMove(contact, +amount)\r\n        if (!user) return\r\n        utilService.showToast('BTC\\'s transferred successfully!','success')\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    contactMoveList = () => {\r\n        const movesToContact = this.props.loggedInUser.moves.filter(move => {\r\n            return move.toId === this.props.contact._id\r\n        })\r\n        return movesToContact\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        const { loggedInUser } = this.props\r\n        return (\r\n            contact && loggedInUser &&\r\n            <section className=\"contact-details\">\r\n                <h1>{contact.name}'s details:</h1>\r\n                <p>Email : {contact.email}</p>\r\n                <p className=\"phone\">Phone Number : {contact.phone}</p>\r\n                <div className=\"contact-actions\">\r\n                    <Link to={`/contact/edit/${contact._id}`}>Edit Contact</Link>\r\n                    <button onClick={() => this.removeContact(contact._id)}>Remove Contact</button>\r\n                </div>\r\n                <form onSubmit={(ev) => this.transferBTC(ev, contact, this.state.amount)}>\r\n                    <label>Insert Amount to transfer\r\n                        <input onChange={(ev) => this.updateAmount(ev)} type=\"num\" placeholder=\"BTC\" />\r\n                    </label>\r\n                    <button>Transfer</button>\r\n                </form>\r\n                <div className=\"transfer-img\">\r\n                    <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                    {this.contactMoveList().length > 0 && <MovesList moves={this.contactMoveList()} />}\r\n                </div>\r\n                <Link to=\"/contact\">← Back to contacts</Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact: contactActions.loadCurrContact,\r\n    removeContact: contactActions.removeContact,\r\n    getLoggedInUser: userActions.getLoggedInUser,\r\n    addMove: userActions.addMove,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetails)","import React from 'react'\r\nimport ContactPreview from '../cmps/Contact-Preview'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\nimport utilService from '../services/utils.service'\r\n\r\n\r\nclass ContactEdit extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            phone: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const _id = this.props.match.params.id\r\n        if (_id) {\r\n            await this.props.loadCurrContact(_id);\r\n            this.setState(() => {\r\n                return {\r\n                    contact: JSON.parse(JSON.stringify(this.props.contact))\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        utilService.showToast('Contact edited successfully!','success')\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"contact-prev-edit\">\r\n                    <ContactPreview contact={this.state.contact} />\r\n                </div>\r\n                <form onSubmit={this.saveContact}>\r\n                    <div className=\"form-fields\">\r\n                        <label> Name:\r\n                    <input value={contact.name} onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                        </label>\r\n                        <label>Phone:<input value={contact.phone} type=\"text\" onChange={(ev) => this.updateContact(ev, 'phone')} />\r\n                        </label>\r\n                        <label> Email:\r\n                    <input value={contact.email} onChange={(ev) => this.updateContact(ev, 'email')} type=\"email\" />\r\n                        </label>\r\n                        <button>Save Contact</button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveContact: contactActions.saveContact,\r\n    loadCurrContact: contactActions.loadCurrContact,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEdit)","import React from 'react';\r\nimport Home from './views/Home'\r\nimport Login from './views/Login'\r\nimport ContactPage from './views/ContactPage'\r\nimport ContactDetails from './views/ContactDetails'\r\nimport ContactEdit from './views/ContactEdit'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nfunction Router() {\r\n    return (\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Login} />\r\n                <Route exact path=\"/home\" component={Home} />\r\n                <Route exact path=\"/contact\" component={ContactPage} />\r\n                <Route exact path=\"/contact/edit/:id?\" component={ContactEdit} />\r\n                <Route exact path=\"/contact/:id\" component={ContactDetails} />\r\n            </Switch>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport './styles/App.scss';\r\nimport { NavBar } from './cmps/Nav-Bar'\r\nimport Router from './Router'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n        <Router/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nconst INITIAL_STATE = {\r\n    contacts: null,\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) { //action : {type: 'SET_CURR_ROBOT', robot:robot}\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.currContact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'REMOVE_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: null\r\n            }\r\n        case 'UPDATE_CONTACTS':\r\n            const idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    loggedInUser: null,\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) { \r\n    switch (action.type) {\r\n        case 'SET_CURR_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport contactReducer from './contact/contact.reducers'\r\nimport userReducer from './user/user.reducers'\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer,\r\n    user: userReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n    \nserviceWorker.register();\n"],"sourceRoot":""}