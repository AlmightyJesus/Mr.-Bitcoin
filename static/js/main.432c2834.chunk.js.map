{"version":3,"sources":["services/user.service.js","services/bitcoin.service.js","cmps/Moves-List.jsx","stores/user/user.actions.js","views/Home.jsx","cmps/Contact-Preview.jsx","cmps/Contact-List.jsx","services/contact.service.js","stores/contact/contact.actions.js","views/ContactPage.jsx","cmps/Nav-Bar.jsx","views/ContactDetails.jsx","stores/contact/contact.reducers.js","stores/user/user.reducers.js","stores/store.js","views/ContactEdit.jsx","App.jsx","serviceWorker.js","index.js"],"names":["getUser","signUp","name","gUsers","push","_id","_makeId","coins","moves","addMove","contact","amount","loggedInUser","unshift","toId","to","at","Date","now","saveToStorage","Promise","resolve","users","loadFromStorage","_createUsers","length","txt","possible","i","charAt","Math","floor","random","key","value","json","JSON","stringify","localStorage","setItem","getItem","parse","getRate","a","async","axios","get","rate","MovesList","this","props","map","move","toLocaleString","React","Component","user","type","getLoggedInUser","dispatch","userService","Home","state","bitcoinService","setState","data","mapDispatchToProps","userActions","connect","ContactPreview","className","src","alt","phone","email","ContactList","contacts","getContacts","filterBy","reject","term","contactsToReturn","toLocaleLowerCase","filter","includes","sort","b","getContactById","id","find","removeContact","index","findIndex","splice","saveContact","c","_updateContact","_addContact","getEmptyContact","setContacts","setCurrContact","currContact","removeCurrContact","updateContacts","loadContacts","contactService","loadCurrContact","savedContact","ContactFilter","handleFilter","onChange","ev","target","ContactPage","contactsToShow","toLowerCase","contactActions","NavBar","ContactDetails","window","confirm","history","match","params","preventDefault","alert","onClick","onSubmit","transferBTC","updateAmount","placeholder","INITIAL_STATE","__REDUX_DEVTOOLS_EXTENSION__","rootReducer","combineReducers","action","idx","slice","store","createStore","applyMiddleware","thunk","ContactEdit","updateContact","field","prevState","console","log","App","exact","path","component","Boolean","location","hostname","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.432c2834.chunk.js","sourcesContent":["\r\nexport default {\r\n    getUser,\r\n    signUp,\r\n    addMove,\r\n}\r\n\r\nvar gUsers = _createUsers()\r\nconst loggedInUser = getUser()\r\n\r\n\r\nfunction _createUsers() {\r\n    var users = loadFromStorage('users')\r\n    if (!users) {\r\n        users = [\r\n            {\r\n                _id: _makeId(),\r\n                name: \"Shuki\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: _makeId(),\r\n                name: \"Shula Mualem\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: _makeId(),\r\n                name: \"Zigmond\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: _makeId(),\r\n                name: \"Mulu Mendi\",\r\n                coins: 100,\r\n                moves: []\r\n            }\r\n        ]\r\n        saveToStorage('users', users)\r\n        gUsers = users\r\n    }\r\n    return gUsers\r\n}\r\n\r\n\r\nfunction addMove(contact, amount) {\r\n    loggedInUser.moves.unshift({\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        at: Date.now(),\r\n        amount\r\n    })\r\n    loggedInUser.coins -= amount\r\n    saveToStorage('loggedInUser', loggedInUser)\r\n    return Promise.resolve(loggedInUser)\r\n}\r\n\r\nfunction getUser() {\r\n    var loggedInUser = loadFromStorage('loggedInUser')\r\n    if (!loggedInUser) {\r\n        loggedInUser = gUsers[3]\r\n        saveToStorage('loggedInUser', loggedInUser)\r\n    }\r\n    return loggedInUser\r\n}\r\n\r\nfunction signUp(name) {\r\n    gUsers.push({\r\n        _id: _makeId(),\r\n        name,\r\n        coins: 100,\r\n        moves: []\r\n    })\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    const json = JSON.stringify(value);\r\n    localStorage.setItem(key, json)\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const json = localStorage.getItem(key);\r\n    const value = JSON.parse(json)\r\n    return value;\r\n}\r\n","\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    getRate,\r\n}\r\n\r\nasync function getRate() {\r\n    const rate = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1&cors=true')\r\n    return rate\r\n}","import React from 'react'\r\n\r\nexport default class MovesList extends React.Component {\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <ul>\r\n                {this.props.moves.map(move => {\r\n                    const at = new Date(move.at).toLocaleString()\r\n                    return <li key={move.at}>\r\n                        <p>Transfered {move.amount} BTC to {move.to} at {at}</p>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}","import userService from '../../services/user.service'\r\n\r\n\r\nconst getLoggedInUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await userService.getUser()\r\n        return dispatch(getUser(user))\r\n    }\r\n}\r\n\r\nconst getUser = (user) => {\r\n    return { type: 'SET_CURR_USER', user }\r\n}\r\n\r\nexport default {\r\n    getLoggedInUser,\r\n\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport userService from '../services/user.service'\r\nimport bitcoinService from '../services/bitcoin.service'\r\nimport MovesList from '../cmps/Moves-List'\r\nimport userActions from '../stores/user/user.actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        rate: null,\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.getLoggedInUser()\r\n        const rate = await bitcoinService.getRate()\r\n        this.setState({ rate: rate.data })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        return (\r\n            user && <>\r\n                <h1>Hello {user.name}</h1>\r\n                <h4>Coins : {user.coins}</h4>\r\n                {this.state.rate && <h4>BTC Rate: {this.state.rate}</h4>}\r\n                {user.moves.length > 0 && <MovesList moves={user.moves} />}\r\n                <Link to=\"/contact\">See Contacts</Link>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedInUser: userActions.getLoggedInUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ContactPreview extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n\r\n            <li className=\"contact\">\r\n                <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                    <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                    <div className=\"contact-Info\">\r\n                        <h3>Name: {contact.name}</h3>\r\n                        <p>Phone: {contact.phone}</p>\r\n                        <p>Email: {contact.email}</p>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}   ","import React from 'react'\r\nimport ContactPreview from './Contact-Preview'\r\n\r\nexport default class ContactList extends React.Component {\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n                <ul className= \"contact-list\">\r\n                    {contacts && contacts.map(contact => <ContactPreview contact={contact} key={contact._id} />)}\r\n                </ul>\r\n        )\r\n    }\r\n}","\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    removeContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts;\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction removeContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = _makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {    \r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];","import contactService from '../../services/contact.service'\r\n\r\nconst loadContacts = () => {\r\n    return async (dispatch) => {\r\n        const contacts = await contactService.getContacts()\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst setContacts = contacts => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\n\r\n\r\nconst loadCurrContact = (_id) => {\r\n    return async (dispatch) => {\r\n        const contact = await contactService.getContactById(_id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setCurrContact = currContact => {\r\n    return { type: 'SET_CURR_CONTACT', currContact }\r\n}\r\n\r\n\r\n\r\nconst removeContact = (_id) => {\r\n    return async (dispatch) => {\r\n        await contactService.removeContact(_id)\r\n        return dispatch(removeCurrContact())\r\n    }\r\n}\r\n\r\nconst removeCurrContact = () => {\r\n    return { type: 'REMOVE_CONTACT'}\r\n}\r\n\r\n\r\n\r\nconst saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const savedContact = await contactService.saveContact(contact)\r\n        return dispatch(updateContacts(savedContact))\r\n    }\r\n}\r\n\r\nconst updateContacts = (contact) => {\r\n    return { type: 'UPDATE_CONTACTS',contact}\r\n}\r\n\r\nexport default {\r\n    loadContacts,\r\n    loadCurrContact,\r\n    removeContact,\r\n    saveContact,\r\n}","import React from 'react'\r\nimport ContactList from '../cmps/Contact-List'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\n\r\n\r\nfunction ContactFilter({ handleFilter }) {\r\n    return (\r\n        <input type=\"text\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n    )\r\n}\r\n\r\nclass ContactPage extends React.Component {\r\n    state = {\r\n        filter: null,\r\n    }\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ filter: value })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadContacts()\r\n    }\r\n\r\n    render() {\r\n        const { filter } = this.state\r\n        const { contacts } = this.props\r\n        let contactsToShow\r\n        if (!filter) contactsToShow = contacts\r\n        else contactsToShow = contacts.filter(contact => {\r\n            return contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        })\r\n        return (\r\n            <>\r\n                <h1>contacts</h1>\r\n                <div className=\"filter\">\r\n                    Search Contact:  <ContactFilter handleFilter={this.handleFilter} />\r\n                </div>\r\n                <Link className=\"add-link\" to=\"/contact/edit/\">Add Contact</Link>\r\n                {contacts && <ContactList contacts={contactsToShow} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts: contactActions.loadContacts,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function NavBar() {\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <h1>Mr. <span>₿</span></h1>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/contact\">Contacts</Link>\r\n                <Link to=\"/statistics\">Statistics</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport userService from '../services/user.service'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\n\r\nclass ContactDetails extends React.Component {\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    updateAmount(ev) {\r\n        const { value } = ev.target\r\n        this.setState({ amount: value })\r\n    }\r\n\r\n    async removeContact(id) {\r\n        if (window.confirm('Are you sure you wanna delete?')) {\r\n            await this.props.removeContact(id)\r\n            this.props.history.push('/contact')\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const _id = this.props.match.params.id\r\n        await this.props.loadCurrContact(_id)\r\n    }\r\n\r\n    async transferBTC(ev, contact, amount) {\r\n        ev.preventDefault()\r\n        await userService.addMove(contact, amount)\r\n        alert('successfully transfered the cash')\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            contact &&\r\n            <section className=\"contact-details\">\r\n                <h1>{contact.name}'s details:</h1>\r\n                <p>Email : {contact.email}</p>\r\n                <p>Phone Number : {contact.phone}</p>\r\n                <div className=\"contact-actions\">\r\n                    <Link to={`/contact/edit/${contact._id}`}>Edit Contact</Link>\r\n                    <button onClick={() => this.removeContact(contact._id)}>Remove Contact</button>\r\n                </div>\r\n                <form onSubmit={(ev) => this.transferBTC(ev, contact, this.state.amount)}>\r\n                    <label>Insert Amount to transfer\r\n                        <input onChange={(ev) => this.updateAmount(ev)} type=\"num\" placeholder=\"BTC\" />\r\n                    </label>\r\n                    <button>Transfer</button>\r\n                </form>\r\n                <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                <Link to=\"/contact\">← Back to contacts</Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact: contactActions.loadCurrContact,\r\n    removeContact: contactActions.removeContact,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetails)","\r\nconst INITIAL_STATE = {\r\n    contacts: null,\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) { //action : {type: 'SET_CURR_ROBOT', robot:robot}\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.currContact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'REMOVE_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: null\r\n            }\r\n        case 'UPDATE_CONTACTS':\r\n            const idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    loggedInUser: null,\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) { \r\n    switch (action.type) {\r\n        case 'SET_CURR_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport contactReducer from './contact/contact.reducers'\r\nimport userReducer from './user/user.reducers'\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer,\r\n    user: userReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport contactService from '../services/contact.service'\r\nimport ContactPreview from '../cmps/Contact-Preview'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\nimport store from '../stores/store'\r\n\r\nclass ContactEdit extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            phone: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n       console.log(this.props);\r\n        \r\n        const _id = this.props.match.params.id\r\n        if (_id) {\r\n            await this.props.loadCurrContact(_id);\r\n            this.setState(() => {\r\n                return {\r\n                    contact: JSON.parse(JSON.stringify(this.props.contact))\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n            this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"contact-prev-edit\">\r\n                    <ContactPreview contact={this.state.contact} />\r\n                </div>\r\n                <form onSubmit={this.saveContact}>\r\n                    <div className=\"form-fields\">\r\n                        <label> Name:\r\n                    <input value={contact.name} onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                        </label>\r\n                        <label>Phone:<input value={contact.phone} type=\"text\" onChange={(ev) => this.updateContact(ev, 'phone')} />\r\n                        </label>\r\n                        <label> Email:\r\n                    <input value={contact.email} onChange={(ev) => this.updateContact(ev, 'email')} type=\"email\" />\r\n                        </label>\r\n                        <button>Save Contact</button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveContact: contactActions.saveContact,\r\n    loadCurrContact: contactActions.loadCurrContact,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEdit)","import React from 'react';\nimport './styles/App.scss';\nimport  Home  from './views/Home'\nimport ContactPage from './views/ContactPage'\nimport { NavBar } from './cmps/Nav-Bar'\nimport ContactDetails from './views/ContactDetails'\nimport ContactEdit from './views/ContactEdit'\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/contact\" component={ContactPage} />\n        <Route exact path=\"/contact/edit/:id?\" component={ContactEdit} />\n        <Route exact path=\"/contact/:id\" component={ContactDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}