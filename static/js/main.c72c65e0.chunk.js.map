{"version":3,"sources":["services/user.service.js","services/bitcoin.service.js","views/Home.jsx","services/contact.service.js","cmps/Contact-Preview.jsx","cmps/Contact-List.jsx","views/ContactPage.jsx","cmps/Nav-Bar.jsx","views/ContactDetails.jsx","views/ContactEdit.jsx","App.jsx","serviceWorker.js","index.js"],"names":["getUser","name","coins","moves","getRate","a","async","axios","get","rate","user","userService","Home","state","bitcoinService","this","setState","data","to","React","Component","getContacts","filterBy","Promise","resolve","reject","term","contactsToReturn","contacts","toLocaleLowerCase","filter","contact","includes","phone","email","sort","b","getContactById","id","find","_id","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","length","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","ContactPreview","props","className","key","src","alt","ContactList","map","ContactPage","handleFilter","value","contactService","contactsToShow","toLowerCase","ContactFilter","type","onChange","ev","target","NavBar","ContactDetails","window","confirm","history","match","params","onClick","removeContact","ContactEdit","updateContact","field","prevState","preventDefault","console","log","onSubmit","App","exact","path","component","Boolean","location","hostname","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c72c65e0.chunk.js","sourcesContent":["\r\nexport default {\r\n    getUser,\r\n\r\n}\r\n\r\nfunction getUser() {\r\n    return {\r\n        name: \"Mulu Mendi\",\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n}","\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    getRate,\r\n}\r\n\r\nasync function getRate() {\r\n    const rate = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1&cors=true')\r\n    return rate\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport userService from '../services/user.service'\r\nimport bitcoinService from '../services/bitcoin.service'\r\n\r\nconst user = userService.getUser()\r\n\r\nexport default class Home extends React.Component {\r\n    state = {\r\n        rate: null\r\n    }\r\n    async componentDidMount() {\r\n        const rate = await bitcoinService.getRate()\r\n\r\n        this.setState({ rate: rate.data })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Hello {user.name}</h1>\r\n                <h4>Coins : {user.coins}</h4>\r\n                {this.state.rate && <h4>BTC Rate: {this.state.rate}</h4>}\r\n                <Link to=\"/contact\">See Contacts</Link>\r\n            </>\r\n        )\r\n    }\r\n}","\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts;\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = _makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ContactPreview extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n\r\n            <li className=\"contact\">\r\n                <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                    <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                    <div className=\"contact-Info\">\r\n                        <h3>Name: {contact.name}</h3>\r\n                        <p>Phone: {contact.phone}</p>\r\n                        <p>Email: {contact.email}</p>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}   ","import React from 'react'\r\nimport ContactPreview from './Contact-Preview'\r\n\r\nexport default class ContactList extends React.Component {\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n                <ul className= \"contact-list\">\r\n                    {contacts && contacts.map(contact => <ContactPreview contact={contact} key={contact._id} />)}\r\n                </ul>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport contactService from '../services/contact.service'\r\nimport ContactList from '../cmps/Contact-List'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ContactPage extends React.Component {\r\n    handleFilter = (value) => {\r\n        this.setState({ filter: value })\r\n    }\r\n\r\n    state = {\r\n        contacts: [],\r\n        filter: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const contacts = await contactService.getContacts()\r\n        this.setState({ contacts })\r\n    }\r\n\r\n    render() {\r\n        const { filter, contacts } = this.state\r\n        let contactsToShow\r\n        if (!filter) contactsToShow = contacts\r\n        else contactsToShow = contacts.filter(contact => {\r\n            return contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        })\r\n        return (\r\n            <>\r\n                <h1>contacts</h1>\r\n                <div className=\"filter\">\r\n                    Search Contact:  <ContactFilter handleFilter={this.handleFilter} />\r\n                </div>\r\n                <Link className=\"add-link\" to=\"/contact/edit/\">Add Contact</Link>\r\n                {contacts.length > 0 && <ContactList contacts={contactsToShow} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ContactFilter({ handleFilter }) {\r\n    return (\r\n        <input type=\"text\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function NavBar() {\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <h1>Mr. <span>₿</span></h1>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/contact\">Contacts</Link>\r\n                <Link to=\"/statistics\">Statistics</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport contactService from '../services/contact.service'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class ContactDetails extends React.Component {\r\n    state = {\r\n        contact: null\r\n    }\r\n\r\n    async removeContact(id) {\r\n        if (window.confirm('Are you sure you wanna delete?')) {\r\n            await contactService.deleteContact(id)\r\n            this.props.history.push('/contact')\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const _id = this.props.match.params.id\r\n        const contact = await contactService.getContactById(_id);\r\n        if (contact) this.setState({ contact })\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        return (\r\n            contact &&\r\n            <section className=\"contact-details\">\r\n                <h1>{contact.name}'s details:</h1>\r\n                <p>Email : {contact.email}</p>\r\n                <p>Phone Number : {contact.phone}</p>\r\n                <div className=\"contact-actions\">\r\n                    <Link to={`/contact/edit/${contact._id}`}>Edit Contact</Link>\r\n                    <button onClick={() => this.removeContact(contact._id)}>Remove Contact</button>\r\n                </div>\r\n                <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                <Link to=\"/contact\">← Back to contacts</Link>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport contactService from '../services/contact.service'\r\nimport ContactPreview from '../cmps/Contact-Preview'\r\n\r\nexport default class ContactEdit extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            phone: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const _id = this.props.match.params.id\r\n        console.log(_id);\r\n        \r\n        if(_id){\r\n            var contact = await contactService.getContactById(_id);\r\n        }\r\n        if (contact) this.setState({ contact })\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await contactService.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const {contact} = this.state\r\n        return (\r\n            <>\r\n                <div className=\"contact-prev-edit\">\r\n                    <ContactPreview contact={this.state.contact} />\r\n                </div>\r\n                <form onSubmit={this.saveContact}>\r\n                    <div className=\"form-fields\">\r\n                        <label> Name:\r\n                    <input value ={contact.name}  onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                        </label>\r\n                        <label>Phone:<input value ={contact.phone} type=\"text\" onChange={(ev) => this.updateContact(ev, 'phone')} />\r\n                        </label>\r\n                        <label> Email:\r\n                    <input value ={contact.email} onChange={(ev) => this.updateContact(ev, 'email')} type=\"email\" />\r\n                        </label>\r\n                        <button>Save Contact</button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './styles/App.scss';\nimport  Home  from './views/Home'\nimport ContactPage from './views/ContactPage'\nimport { NavBar } from './cmps/Nav-Bar'\nimport ContactDetails from './views/ContactDetails'\nimport ContactEdit from './views/ContactEdit'\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/contact\" component={ContactPage} />\n        <Route exact path=\"/contact/edit/:id?\" component={ContactEdit} />\n        <Route exact path=\"/contact/:id\" component={ContactDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history}>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}