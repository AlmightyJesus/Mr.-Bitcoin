{"version":3,"sources":["assets/img/bitcoin.png","services/bitcoin.service.js","cmps/Moves-List.jsx","services/utils.service.js","services/user.service.js","stores/user/user.actions.js","views/Home.jsx","views/Login.jsx","cmps/Contact-Preview.jsx","cmps/Contact-List.jsx","services/contact.service.js","stores/contact/contact.actions.js","views/ContactPage.jsx","cmps/Nav-Bar.jsx","views/ContactDetails.jsx","views/ContactEdit.jsx","App.jsx","stores/contact/contact.reducers.js","stores/user/user.reducers.js","stores/store.js","serviceWorker.js","index.js"],"names":["module","exports","getRate","a","async","axios","get","rate","MovesList","this","props","moves","map","move","at","Date","toLocaleString","key","amount","to","React","Component","makeId","length","txt","possible","i","charAt","Math","floor","random","saveToStorage","value","json","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","getUser","signUp","name","newUser","_id","utilService","coins","gUsers","push","Promise","resolve","addMove","contact","loggedInUser","alert","unshift","toId","now","checkLogin","user","find","reject","users","_createUsers","setUser","type","getLoggedInUser","dispatch","userService","Home","state","bitcoinService","setState","data","mapDispatchToProps","userActions","connect","Login","updateName","ev","target","login","preventDefault","window","confirm","history","className","src","require","alt","onSubmit","onChange","placeholder","ContactPreview","phone","email","ContactList","contacts","getContacts","filterBy","term","contactsToReturn","toLocaleLowerCase","filter","includes","sort","b","getContactById","id","removeContact","index","findIndex","splice","saveContact","c","_updateContact","_addContact","getEmptyContact","setContacts","setCurrContact","currContact","removeCurrContact","updateContacts","loadContacts","contactService","loadCurrContact","savedContact","ContactFilter","handleFilter","ContactPage","contactsToShow","toLowerCase","contactActions","NavBar","ContactDetails","contactMoveList","match","params","Number","isInteger","onClick","transferBTC","updateAmount","ContactEdit","updateContact","field","prevState","App","exact","path","component","INITIAL_STATE","__REDUX_DEVTOOLS_EXTENSION__","rootReducer","combineReducers","action","idx","slice","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.101261b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitcoin.1826ecc4.png\";","\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    getRate,\r\n}\r\n\r\nasync function getRate() {\r\n    const rate = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1&cors=true')\r\n    return rate\r\n}","import React from 'react'\r\n\r\nexport default class MovesList extends React.Component {\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.props.moves.map(move => {\r\n                    const at = new Date(move.at).toLocaleString()\r\n                    return <li key={move.at}>\r\n                        <p>Transfered {move.amount} BTC to {move.to} at {at}</p>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}","export default {\r\n    makeId,\r\n    saveToStorage,\r\n    loadFromStorage,\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    const json = JSON.stringify(value);\r\n    localStorage.setItem(key, json)\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const json = localStorage.getItem(key);\r\n    const value = JSON.parse(json)\r\n    return value;\r\n}\r\n","import utilService from './utils.service'\r\n\r\nexport default {\r\n    getUser,\r\n    signUp,\r\n    addMove,\r\n    checkLogin,\r\n}\r\n\r\nvar gUsers = _createUsers()\r\n\r\nfunction _createUsers() {\r\n    var users = utilService.loadFromStorage('users')\r\n    if (!users) {\r\n        users = [\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Shuki\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Shula Mualem\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Zigmond\",\r\n                coins: 100,\r\n                moves: []\r\n            },\r\n            {\r\n                _id: utilService.makeId(),\r\n                name: \"Mulu Mendi\",\r\n                coins: 100,\r\n                moves: []\r\n            }\r\n        ]\r\n        utilService.saveToStorage('users', users)\r\n    }\r\n    gUsers = users\r\n    return gUsers\r\n}\r\n\r\n\r\nfunction addMove(contact, amount) {\r\n    var loggedInUser = getUser()    \r\n    if (loggedInUser.coins < amount) return alert('not enough BTC\\'s in your bank m8')    \r\n    loggedInUser.moves.unshift({\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        at: Date.now(),\r\n        amount\r\n    })\r\n    loggedInUser.coins -= amount\r\n    utilService.saveToStorage('loggedInUser', loggedInUser)\r\n    return Promise.resolve(loggedInUser)\r\n}\r\n\r\nfunction getUser() {\r\n    var loggedInUser = utilService.loadFromStorage('loggedInUser')    \r\n    if (!loggedInUser) {\r\n        loggedInUser = gUsers[3]\r\n        utilService.saveToStorage('loggedInUser', loggedInUser)\r\n    }\r\n    return loggedInUser\r\n}\r\n\r\nfunction signUp(name) {\r\n    const newUser = {\r\n        _id: utilService.makeId(),\r\n        name,\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n    gUsers.push(newUser)\r\n    utilService.saveToStorage('users', gUsers)\r\n    utilService.saveToStorage('loggedInUser', newUser)\r\n    return Promise.resolve(newUser)\r\n}\r\n\r\nfunction checkLogin(name) {\r\n    var user = gUsers.find(user => {\r\n        return user.name === name\r\n    })    \r\n    if (!user) return Promise.reject('Nope')\r\n    utilService.saveToStorage('loggedInUser', user)\r\n    return Promise.resolve(user)\r\n}","import userService from '../../services/user.service'\r\n\r\nconst getLoggedInUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await userService.getUser()\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nconst setUser = (user) => {\r\n    return { type: 'SET_CURR_USER', user }\r\n}\r\n\r\n\r\nconst signUp = (name) => {\r\n    return async (dispatch) => {\r\n        const user = await userService.signUp(name)\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\n\r\nconst checkLogin = (name) => {\r\n    return async (dispatch) => {\r\n        const user = await userService.checkLogin(name)\r\n        if (user) return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport default {\r\n    getLoggedInUser,\r\n    checkLogin,\r\n    signUp,\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport bitcoinService from '../services/bitcoin.service'\r\nimport MovesList from '../cmps/Moves-List'\r\nimport userActions from '../stores/user/user.actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        rate: null,\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.getLoggedInUser()\r\n        const rate = await bitcoinService.getRate()\r\n        this.setState({ rate: rate.data })\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        return (\r\n            user && <>\r\n                <h1>Hello {user.name}</h1>\r\n                <h4>Coins : {user.coins}</h4>\r\n                {this.state.rate && <h4>BTC Rate: {this.state.rate}</h4>}\r\n                {user.moves.length > 0 && <MovesList moves={user.moves} />}\r\n                <Link to=\"/contact\">See Contacts</Link>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedInUser: userActions.getLoggedInUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home)","import React from 'react'\r\nimport userActions from '../stores/user/user.actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        name: ''\r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    updateName = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ name: value })\r\n    }\r\n\r\n    login = async (ev) => {\r\n        ev.preventDefault()\r\n        const { name } = this.state\r\n        var user;\r\n        try {\r\n            user = await this.props.checkLogin(name)            \r\n        } catch (err) {\r\n            if (window.confirm('No such user. Would you like to create this user?')) {\r\n                user = await this.props.signUp(name)                \r\n            }\r\n        }        \r\n        if (user) this.props.history.push('/home')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Login / Signup</h1>\r\n                <img className='bitcoin-img' src={require(\"../assets/img/bitcoin.png\")} alt=\"bitcoin\"/>\r\n                <form onSubmit={(ev) => this.login(ev)}>\r\n                    <label>Name:\r\n                   <input onChange={(ev) => this.updateName(ev)} type=\"text\" placeholder=\"Enter name\" />\r\n                    </label>\r\n                    <button>Login</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    checkLogin: userActions.checkLogin,\r\n    signUp: userActions.signUp,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ContactPreview extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n\r\n            <li className=\"contact\">\r\n                <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                    <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                    <div className=\"contact-Info\">\r\n                        <h3>Name: {contact.name}</h3>\r\n                        <p>Phone: {contact.phone}</p>\r\n                        <p>Email: {contact.email}</p>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}   ","import React from 'react'\r\nimport ContactPreview from './Contact-Preview'\r\n\r\nexport default class ContactList extends React.Component {\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n                <ul className= \"contact-list\">\r\n                    {contacts && contacts.map(contact => <ContactPreview contact={contact} key={contact._id} />)}\r\n                </ul>\r\n        )\r\n    }\r\n}","import utilService from './utils.service'\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    removeContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts;\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction removeContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = utilService.makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {    \r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];","import contactService from '../../services/contact.service'\r\n\r\nconst loadContacts = () => {\r\n    return async (dispatch) => {\r\n        const contacts = await contactService.getContacts()\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst setContacts = contacts => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\n\r\n\r\nconst loadCurrContact = (_id) => {\r\n    return async (dispatch) => {\r\n        const contact = await contactService.getContactById(_id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setCurrContact = currContact => {\r\n    return { type: 'SET_CURR_CONTACT', currContact }\r\n}\r\n\r\n\r\n\r\nconst removeContact = (_id) => {\r\n    return async (dispatch) => {\r\n        await contactService.removeContact(_id)\r\n        return dispatch(removeCurrContact())\r\n    }\r\n}\r\n\r\nconst removeCurrContact = () => {\r\n    return { type: 'REMOVE_CONTACT'}\r\n}\r\n\r\n\r\n\r\nconst saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const savedContact = await contactService.saveContact(contact)\r\n        return dispatch(updateContacts(savedContact))\r\n    }\r\n}\r\n\r\nconst updateContacts = (contact) => {\r\n    return { type: 'UPDATE_CONTACTS',contact}\r\n}\r\n\r\nexport default {\r\n    loadContacts,\r\n    loadCurrContact,\r\n    removeContact,\r\n    saveContact,\r\n}","import React from 'react'\r\nimport ContactList from '../cmps/Contact-List'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\n\r\n\r\nfunction ContactFilter({ handleFilter }) {\r\n    return (\r\n        <input type=\"text\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n    )\r\n}\r\n\r\nclass ContactPage extends React.Component {\r\n    state = {\r\n        filter: null,\r\n    }\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ filter: value })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadContacts()\r\n    }\r\n\r\n    render() {\r\n        const { filter } = this.state\r\n        const { contacts } = this.props\r\n        let contactsToShow\r\n        if (!filter) contactsToShow = contacts\r\n        else contactsToShow = contacts.filter(contact => {\r\n            return contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        })\r\n        return (\r\n            <>\r\n                <h1>contacts</h1>\r\n                <div className=\"filter\">\r\n                    Search Contact:  <ContactFilter handleFilter={this.handleFilter} />\r\n                </div>\r\n                <Link className=\"add-link\" to=\"/contact/edit/\">Add Contact</Link>\r\n                {contacts && <ContactList contacts={contactsToShow} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts: contactActions.loadContacts,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function NavBar() {\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <h1>Mr. <span>₿</span></h1>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/home\">Home</Link>\r\n                <Link to=\"/contact\">Contacts</Link>\r\n                <Link to=\"/statistics\">Statistics</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport userService from '../services/user.service'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\nimport userActions from '../stores/user/user.actions'\r\nimport MovesList from '../cmps/Moves-List'\r\n\r\n\r\n\r\nclass ContactDetails extends React.Component {\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    updateAmount(ev) {\r\n        const { value } = ev.target\r\n        this.setState({ amount: value })\r\n    }\r\n\r\n    async removeContact(id) {\r\n        if (window.confirm('Are you sure you wanna delete?')) {\r\n            await this.props.removeContact(id)\r\n            this.props.history.push('/contact')\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getLoggedInUser()\r\n        const _id = this.props.match.params.id\r\n        await this.props.loadCurrContact(_id)\r\n    }\r\n\r\n    async transferBTC(ev, contact, amount) {\r\n        ev.preventDefault()\r\n        if (!Number.isInteger(+amount)) return alert('Only numbers please')\r\n        const user = await userService.addMove(contact, +amount)\r\n        if (!user) return\r\n        alert('successfully transfered the BTC\\'s')\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    contactMoveList = () => {\r\n        const movesToContact = this.props.loggedInUser.moves.filter(move => {\r\n            return move.toId === this.props.contact._id\r\n        })\r\n        return movesToContact\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        const { loggedInUser } = this.props\r\n        return (\r\n            contact && loggedInUser &&\r\n            <section className=\"contact-details\">\r\n                <h1>{contact.name}'s details:</h1>\r\n                <p>Email : {contact.email}</p>\r\n                <p>Phone Number : {contact.phone}</p>\r\n                <div className=\"contact-actions\">\r\n                    <Link to={`/contact/edit/${contact._id}`}>Edit Contact</Link>\r\n                    <button onClick={() => this.removeContact(contact._id)}>Remove Contact</button>\r\n                </div>\r\n                <form onSubmit={(ev) => this.transferBTC(ev, contact, this.state.amount)}>\r\n                    <label>Insert Amount to transfer\r\n                        <input onChange={(ev) => this.updateAmount(ev)} type=\"num\" placeholder=\"BTC\" />\r\n                    </label>\r\n                    <button>Transfer</button>\r\n                </form>\r\n                <div className=\"transfer-img\">\r\n                    <img src={`https://robohash.org/${contact._id}/?set=set5`} alt=\"\" />\r\n                    {this.contactMoveList().length > 0 && <MovesList moves={this.contactMoveList()} />}\r\n                </div>\r\n                <Link to=\"/contact\">← Back to contacts</Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact: contactActions.loadCurrContact,\r\n    removeContact: contactActions.removeContact,\r\n    getLoggedInUser: userActions.getLoggedInUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetails)","import React from 'react'\r\nimport ContactPreview from '../cmps/Contact-Preview'\r\nimport { connect } from 'react-redux'\r\nimport contactActions from '../stores/contact/contact.actions'\r\n\r\nclass ContactEdit extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            phone: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const _id = this.props.match.params.id\r\n        if (_id) {\r\n            await this.props.loadCurrContact(_id);\r\n            this.setState(() => {\r\n                return {\r\n                    contact: JSON.parse(JSON.stringify(this.props.contact))\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"contact-prev-edit\">\r\n                    <ContactPreview contact={this.state.contact} />\r\n                </div>\r\n                <form onSubmit={this.saveContact}>\r\n                    <div className=\"form-fields\">\r\n                        <label> Name:\r\n                    <input value={contact.name} onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                        </label>\r\n                        <label>Phone:<input value={contact.phone} type=\"text\" onChange={(ev) => this.updateContact(ev, 'phone')} />\r\n                        </label>\r\n                        <label> Email:\r\n                    <input value={contact.email} onChange={(ev) => this.updateContact(ev, 'email')} type=\"email\" />\r\n                        </label>\r\n                        <button>Save Contact</button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveContact: contactActions.saveContact,\r\n    loadCurrContact: contactActions.loadCurrContact,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEdit)","import React from 'react';\nimport './styles/App.scss';\nimport  Home  from './views/Home'\nimport  Login  from './views/Login'\nimport ContactPage from './views/ContactPage'\nimport { NavBar } from './cmps/Nav-Bar'\nimport ContactDetails from './views/ContactDetails'\nimport ContactEdit from './views/ContactEdit'\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/contact\" component={ContactPage} />\n        <Route exact path=\"/contact/edit/:id?\" component={ContactEdit} />\n        <Route exact path=\"/contact/:id\" component={ContactDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nconst INITIAL_STATE = {\r\n    contacts: null,\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) { //action : {type: 'SET_CURR_ROBOT', robot:robot}\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.currContact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'REMOVE_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: null\r\n            }\r\n        case 'UPDATE_CONTACTS':\r\n            const idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    loggedInUser: null,\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) { \r\n    switch (action.type) {\r\n        case 'SET_CURR_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport contactReducer from './contact/contact.reducers'\r\nimport userReducer from './user/user.reducers'\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer,\r\n    user: userReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}